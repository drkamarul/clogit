library(HSAUR2)
head(backpain)
library(psych)
describe(backpain)
library(survival)
backpain_glm <- clogit(I(status == 'case') ~ driver + suburban + strata(ID), data = backpain)
summary(backpain_glm)
#colnames(data1)<-c("x","match","person","mi","smk","sbp","ecg")
head(data1)
# source for data
# use read.table('http://www.medepi.net/data/mi.txt',sep="")
data1<-read.csv('dataclogit.csv',header = TRUE)
#colnames(data1)<-c("x","match","person","mi","smk","sbp","ecg")
head(data1)
summary(data1)
#colnames(data1)<-c("x","match","person","mi","smk","sbp","ecg")
head(data1)
library(psych)
describe(data1)
describeBy(data1[,5:7], group = mi)
describeBy(data1[,5:7], group = 'mi')
describeBy(data1, group = 'mi')
data1$mi <- factor(data1$mi, levels=0:1, labels=c("No","Yes"))
data1$smk <- factor(data1$smk, levels=0:1, labels=c("Not current","Current"))
data1$ecg <- factor(data1$ecg, levels=0:1, labels=c("Normal","Abnormal"))
str(data1)
head(data1,15)
str(data1)
head(data1,15)
# load survival package to run clogit
library(psych)
describe(data1)
describeBy(data1, group = 'mi')
clogit(mi~smk+strata(match),data=data1)
clogit(I(mi)~smk+strata(match),data=data1)
clogit(I(mi=='Yes')~smk+strata(match),data=data1)
I(mi=='Yes')
I(data1$mi=='Yes')
data1$mi=='Yes'
I(data1$mi=='Yes')
# source for data
# use read.table('http://www.medepi.net/data/mi.txt',sep="")
data1<-read.csv('dataclogit.csv',header = TRUE)
#colnames(data1)<-c("x","match","person","mi","smk","sbp","ecg")
head(data1)
head(data1)
data1$mi <- factor(data1$mi, levels=0:1, labels=c("No","Yes"))
data1$smk <- factor(data1$smk, levels=0:1, labels=c("Not current","Current"))
data1$ecg <- factor(data1$ecg, levels=0:1, labels=c("Normal","Abnormal"))
head(data1,15)
data1$mi <- factor(data1$mi, levels=0:1, labels=c("No","Yes"))
data1$smk <- factor(data1$smk, levels=0:1, labels=c("Not current","Current"))
data1$ecg <- factor(data1$ecg, levels=0:1, labels=c("Normal","Abnormal"))
str(data1,15)
head(data1)
# source for data
# use read.table('http://www.medepi.net/data/mi.txt',sep="")
data1<-read.csv('dataclogit.csv',header = TRUE)
head(data1)
data1$mi <- factor(data1$mi, levels = c(1,2), labels = c("No","Yes"))
head(data1)
# source for data
# use read.table('http://www.medepi.net/data/mi.txt',sep="")
data1<-read.csv('dataclogit.csv',header = TRUE)
head(data1)
data1$mi <- factor(data1$mi, levels = c(1,2), labels = c("Case","Control"))
head(data1)
# source for data
# use read.table('http://www.medepi.net/data/mi.txt',sep="")
data1<-read.csv('dataclogit.csv',header = TRUE)
head(data1)
str(data1)
data1$mi2 <- factor(data1$mi, levels = c(1,0), labels = c("Case","Control"))
head(data1)
data1$mi2 <- factor(data1$mi, levels = c(1,0), labels = c("Case","Control"))
data1$smk2 <- factor(data1$smk, levels = c(0,1), labels=c("Not current","Current"))
data1$ecg2 <- factor(data1$ecg, levels = c(0,1), labels=c("Normal","Abnormal"))
str(data1,15)
head(data1)
head(data1,15)
# load survival package to run clogit
library(psych)
describe(data1)
describeBy(data1, group = 'mi2')
library("survival")
summary(data1)
res.clog<-clogit(I(mi=='Yes')~smk+strata(match),data=data1)
summary(res.clog)
library("survival")
res.clog<-clogit(I(mi=='Yes')~smk+strata(match),data=data1)
summary(res.clog)
library("survival")
res.clog <- clogit(I(mi2=='Case') ~ smk2 + strata(match), data = data1)
summary(res.clog)
library(foreign)
# read data
data2<-read.dta('sal_outbrk.dta',convert.factors = T)
# see variable names
names(data2)
# quick view of the first 10 rows
head(data2,10)
# load survival package to run clogit
head(data2,10)
View(data2)
head(data2)
library(survival)
mod7 <- clogit(I(casecontrol=='case') ~ slt_a + strata(match_grp), data = data2)
summary(mod7)
readLines('lowbwt11.dat', n=5)
data3<-read.table('lowbwt11.dat')
head(data3,10)
colnames(data3)<-c('pair','low','age','lwt','race','smoke','ptd','ht','ui')
data3[,c(2,5:9)]<-lapply(data3[,c(2,5:9)], as.factor)
data3[,c(2,5:9)]<-lapply(data3[,c(2,5:9)], as.factor)
head(data3)
data3[,c(2,5:9)]<-lapply(data3[,c(2,5:9)], as.factor(x, levels = c(0,1), labels = c('yes' , 'no')))
data3[,c(2,5:9)]<-lapply(data3[,c(2,5:9)], function(x) as.factor(x, levels = c(0,1), labels = c('yes' , 'no')))
data3[,c(2,5:9)]<-lapply(data3[,c(2,5:9)], function(x) { as.factor(x, levels = c(0,1), labels = c('yes' , 'no'))})
data3[,c(2,5:9)]<-lapply(data3[,c(2,5:9)], function(x) {
as.factor(x, levels = c(0,1), labels = c('yes' , 'no'))
})
data3[,c(2,5:9)]<-lapply(data3[,c(2,5:9)], function(x) {
as.factor(levels = c(0,1), labels = c('yes' , 'no'))
})
data3[,c(2,5:9)]<-lapply(data3[,c(2,5:9)], function(x) {
as.factor(labels = c('yes' , 'no'))
})
data3[,c(2,5:9)]<-sapply(data3[,c(2,5:9)], function(x) {
as.factor(labels = c('yes' , 'no'))
})
data3[,c(2,5:9)]<-lapply(data3[,c(2,5:9)], function(x) {
as.factor(x, labels = c('yes' , 'no'))
})
data3[,c(2,5:9)]<-apply(data3[,c(2,5:9)], function(x) {
as.factor(x, labels = c('yes' , 'no'))
})
data3[,c(2,5:9)]<-apply(data3[,c(2,5:9)],
as.factor(labels = c('yes' , 'no')))
data3[,c(2,5:9)]<-apply(data3[,c(2,5:9)],  function(x)
as.factor(x, labels = c('yes' , 'no')))
data3[,c(2,5:9)]<-apply(data3[,c(2,5:9)],  as.factor)
data3[,c(2,5:9)]<-apply(data3[,c(2,5:9)],  as.factor())
data3[,c(2,5:9)]<-lapply(data3[,c(2,5:9)],  as.factor)
head(data3)
levels(data3$low) <- c('bwt>2500g','bwt=<2500g')
levels(data3$race) <- c('white','black','other')
levels(data3$smoke) <- c('no','yes')
levels(data3$ptd) <- c('none','yes')
levels(data3$ht) <- c('no','yes')
levels(data3$ui) <- c('no','yes')
str(data3)
c.data3 <- clogit(I(low=='bwt=<2500g') ~ lwt + strata(pair), data = data3)
summary(c.data3)
c.data3sm <- clogit(I(low=='bwt=<2500g') ~ smoke + strata(pair), data = data3)
summary(c.data3sm)
data3$cat.lwt <- cut(data3$lwt, breaks = c(min(data3$lwt)-1,106.5,120.0,136.5,max(data3$lwt)))
table(data3$cat.lwt)
c.data3des<-clogit(I(low=='bwt=<2500g')~cat.lwt+smoke+ptd+ht+ui+strata(pair),data=data3)
summary(c.data3des)
data3$cat.lwt <- cut(data3$lwt, breaks = c(min(data3$lwt)-1,106.5,120.0,136.5,max(data3$lwt)))
table(data3$cat.lwt)
data3$cat.lwt <- cut(data3$lwt, breaks = c(min(data3$lwt)-1, 106.5, 120.0, 136.5, max(data3$lwt)))
table(data3$cat.lwt)
c.data3des <- clogit(I(low=='bwt=<2500g') ~ cat.lwt + smoke + ptd + ht + ui + strata(pair), data = data3)
summary(c.data3des)
library(broom)
c.data3des2 <- tidy(c.data3des)
library(broom)
c.data3des2 <- tidy(c.data3des)
c.data3des2
# plot (midpoint vs beta)
plot(c(93.3,113.5,128.5,188.5),c(0,c.data3des2[1:3,2]),type = 'l')
data3final <- clogit(I(low=='bwt=<2500g') ~ lwt + smoke + ptd + ht + ui + strata(pair), data = data3)
summary(data3final)
nice.op <- tidy(data3final)
write.csv(nice.op,'tableclogit.csv')
# predictor
data3finalfitted <- predict(data3final, type = 'expected')
# to predict linear prediction, not sure in R
# need to find out how 'risk' works for below?????
data3finalfitted <- predict(data3final,type= 'risk')
data3finalfitted <- predict(data3final,type= 'terms')
data3finalfitted <- predict(data3final,type= 'lp')
View(data3finalfitted)
stata1 <- clogit(I(low=='bwt=<2500g') ~ lwt + smoke + ptd + ht + ui + strata(pair), data = data3)
summary(stata1)
p.stata1 <- predict(stata1, type = 'expected')
p.stata1[1,]
p.stata1[1]
r.stata1 <- predict(stata1,type= 'risk')
r.stata1[1]
t.stata1 <- predict(stata1,type= 'terms')
t.stata1[1]
lp.stata1 <- predict(stata1,type= 'lp')
lp.stata1[1]
p.stata1[1:5]
r.stata1[1:4]
t.stata1[1:5]
lp.stata1[1:5]
stata1 <- clogit(I(low=='bwt=<2500g') ~ lwt + smoke + strata(pair), data = data3)
summary(stata1)
p.stata1 <- predict(stata1, type = 'expected')
p.stata1[1:5]
t.stata1 <- predict(stata1,type= 'terms')
t.stata1[1:5]
lp.stata1 <- predict(stata1,type= 'lp')
lp.stata1[1:5]
new.data <- data.frame(lwt = 135, smoke = 'no' )
new.data <- data.frame(lwt = 135, smoke = 'no' , pair = 1)
predict(stata1, newdata = new.data, type = 'expected')
predict(stata1, newdata = new.data, type = 'risk')
risk/(risk + 1)
risk <- predict(stata1, newdata = new.data, type = 'risk')
risk/(risk + 1)
fitted(stata1)
stata1 <- clogit(I(low=='bwt=<2500g') ~ lwt + smoke + strata(pair), data = data3)
summary(stata1)
fitted(stata1)
?fitted
fitted(stata1)
summary(stata1)
set.seed(1)
datatest <- data.frame(Used = rep(c(1,0,0,0),1250),
Open = round(runif(5000,0,50),0),
Activity = rep(sample(runif(24,.5,1.75),1250, replace=T), each=4),
Strata = rep(1:1250,each=4))
View(datatest)
write(datatest,'testpred.dta')
write.dta(dataframe = datatest,file = 'testpred.dta')
mod <- clogit(Used ~ Open + I(Open*Activity) + strata(Strata),data=data)
mod <- clogit(Used ~ Open + I(Open*Activity) + strata(Strata),data=datatest)
summary(mod)
mod <- clogit(Used ~ Open + I(Open*Activity) + strata(Strata),data=datatest)
summary(mod)
newdata <- data.frame(Open = seq(0,50,1),
Activity = rep(max(data$Activity),51), Strata=1)
newdata <- data.frame(Open = seq(0,50,1), Activity = rep(max(data$Activity),51), Strata=1)
newdata <- data.frame(Open = seq(0,50,1), Activity = rep(max(data$Activity)), Strata=1)
newdata <- data.frame(Open = 13, Activity = 0.9014, Strata=1)
risk <- predict(mod,newdata=newdata,type = "risk")
risk/(risk+1)
risk2 <- predict(mod,type = "risk")
risk2/(risk2+1)
(risk2/(risk2+1))[1:10]
risk3 <- predict(mod,type = "expected")
(risk3/(risk3+1))[1:10]
mod <- clogit(Used ~ Open + Open*Activity + strata(Strata),data=datatest)
mod <- clogit(Used ~ Open + Activity + strata(Strata),data=datatest)
mod <- clogit(I(Used==1) ~ Open + Activity + strata(Strata),data=datatest)
mod <- clogit(I(Used==1) ~ Open  + strata(Strata),data=datatest)
summary(mod)
newdata <- data.frame(Open = 13, Strata=1)
risk <- predict(mod,newdata=newdata,type = "risk")
risk/(risk+1)
risk2 <- predict(mod,type = "risk")
(risk2/(risk2+1))[1:10]
risk3 <- predict(mod,type = "expected")
(risk3/(risk3+1))[1:10]
risk3 <- predict(mod,type = "expected")
risk3[1:10]
lp2 <- predict(mod,type = "lp")
lp2[1:10]
set.seed(1)
datatest <- data.frame(Used = rep(c(1,0,0,0),1250),
Open = round(runif(5000,0,50),0),
Activity = rep(sample(runif(24,.5,1.75),1250, replace=T), each=4),
Strata = rep(1:1250,each=4))
mod <- clogit(I(Used==1) ~ Open  + strata(Strata),data=datatest)
summary(mod)
risk3 <- predict(mod,type = "expected")
risk3[1:10]
risk0 <- predict(mod,type = "risk")
risk0[1:10]
(risk/(risk+1))[1:10]
(risk0/(risk0+1))[1:10]
0.4909191-0.5094300
0.48672296-0.0185109
0.48672296-0.5052393
odds_low <- predict(data3final, type = "risk")
odds_low/(odds_low+1)
odds_low <- predict(data3final, type = "risk")
(odds_low/(odds_low+1))[1:10]
risk0 <- predict(mod,type = "risk")
risk0[1:10]
(risk0/(risk0+1))[1:10]
lp2 <- predict(mod,type = "lp")
lp2[1:10]
exp(0.0337724631)
risk3 <- predict(mod,type = "expected")
risk3[1:10]
risk0 <- predict(mod,type = "risk")
risk0[1:10]
(risk0/(risk0+1))[1:10]
exp(-0.036327)
exp(-0.036327)/(1.9643249)
lp2[1:10]
exp(0.037724631)
exp(0.037724631)/(2.038445)
# predicted probability
data3finalfitted <- predict(data3final, type = 'expected')
data3finalfitted[1:10]
risk3 <- predict(mod,type = "expected")
risk3[1:10]
data3$pair[1:10]
# predicted probability
data3finalfitted <- predict(data3final, type = 'expected')
cbind(data3finalfitted[1:10],data3$pair[1:10])
# predicted probability
data3finalfitted <- predict(data3final, type = 'expected')
cbind(data3[1:10, c(4,6:9)], data3finalfitted[1:10], data3$pair[1:10])
# predicted probability
data3finalfitted <- predict(data3final, type = 'expected')
cbind(data3[1:10, c(1, 4,6:9)], data3finalfitted[1:10])
# predicted probability
data3finalfitted <- predict(data3final, type = 'expected')
cbind(data3[1:10, c(1,2 , 4,6:9)], data3finalfitted[1:10])
# predicted probability
data3finalfitted <- predict(data3final, type = 'expected')
cbind(data3[1:10, c(1:3, 4,6:9)], data3finalfitted[1:10])
id3 <- c(1,1,1)
prob3 <- c(0.064, 0.107, 0.925)
outcome3 <- c(0,0,1)
data3 <- cbind(id3, outcome3, prob3)
View(data3)
